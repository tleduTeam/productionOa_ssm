/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-10-29 02:26:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class loginLog_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<link href=\"js/kindeditor-4.1.10/themes/default/default.css\" type=\"text/css\" rel=\"stylesheet\">\n");
      out.write("<script type=\"text/javascript\" charset=\"utf-8\" src=\"js/kindeditor-4.1.10/kindeditor-all-min.js\"></script>\n");
      out.write("<script type=\"text/javascript\" charset=\"utf-8\" src=\"js/kindeditor-4.1.10/lang/zh_CN.js\"></script>\n");
      out.write("\n");
      out.write("<table class=\"easyui-datagrid\" id=\"loginLogList\" title=\"订单列表\" data-options=\"singleSelect:false,collapsible:true,\n");
      out.write("\tpagination:true,rownumbers:true,url:'loginLog/list',method:'get',pageSize:10,fitColumns:true,toolbar:toolbar_loginLog\">\n");
      out.write("    <thead>\n");
      out.write("        <tr>\n");
      out.write("\t\t\t<th data-options=\"field:'ck',checkbox:true\"></th>\n");
      out.write("        \t<th data-options=\"field:'id',align:'center',width:150\">编号</th>\n");
      out.write("            <th data-options=\"field:'come_time',align:'center',width:150\">登录时间</th>\n");
      out.write("            <th data-options=\"field:'ip',align:'center',width:150\">IP地址</th>\n");
      out.write("            <th data-options=\"field:'username',width:150,align:'center'\">登录用户</th>\n");
      out.write("        </tr>\n");
      out.write("    </thead>\n");
      out.write("</table> \n");
      out.write("\n");
      out.write("<div  id=\"toolbar_loginLog\" style=\" height: 22px; padding: 3px 11px; background: #fafafa;\">  \n");
      out.write("\t\n");
      out.write("\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\n");
      out.write("\t<div class=\"datagrid-btn-separator\"></div>  \n");
      out.write("\t\n");
      out.write("\t<div style=\"float: left;\">  \n");
      out.write("\t\t<a href=\"#\" class=\"easyui-linkbutton\" plain=\"true\" icon=\"icon-reload\" onclick=\"loginLog_reload()\">刷新</a>  \n");
      out.write("\t</div>  \n");
      out.write("\t\n");
      out.write("    <div id=\"search_loginLog\" style=\"float: right;\">\n");
      out.write("        <input id=\"search_text_loginLog\" class=\"easyui-searchbox\"  \n");
      out.write("            data-options=\"searcher:doSearch_loginLog,prompt:'请输入...',menu:'#menu_loginLog'\"  \n");
      out.write("            style=\"width:250px;vertical-align: middle;\">\n");
      out.write("        </input>\n");
      out.write("        <div id=\"menu_loginLog\" style=\"width:120px\"> \n");
      out.write("\t\t\t<div data-options=\"name:'loginLogId'\">角色编号</div> \n");
      out.write("\t\t\t<div data-options=\"name:'loginLogName'\">登录用户</div>\n");
      out.write("\t\t</div>     \n");
      out.write("    </div>  \n");
      out.write("</div>  \n");
      out.write("\n");
      out.write("<div id=\"loginLogEditWindow\" class=\"easyui-window\" title=\"编辑订单\" data-options=\"modal:true,closed:true,resizable:true,\n");
      out.write("\ticonCls:'icon-save',href:'loginLog/edit'\" style=\"width:65%;height:80%;padding:10px;\">\n");
      out.write("</div>\n");
      out.write("<div id=\"loginLogAddWindow\" class=\"easyui-window\" title=\"添加订单\" data-options=\"modal:true,closed:true,resizable:true,\n");
      out.write("\ticonCls:'icon-save',href:'loginLog/add'\" style=\"width:65%;height:80%;padding:10px;\">\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("function doSearch_loginLog(value,name){ //用户输入用户名,点击搜素,触发此函数  \n");
      out.write("\tif(value == null || value == ''){\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#loginLogList\").datagrid({\n");
      out.write("\t        title:'订单列表', singleSelect:false, collapsible:true, pagination:true, rownumbers:true, method:'get',\n");
      out.write("\t\t\tnowrap:true, toolbar:\"toolbar_loginLog\", url:'loginLog/list', method:'get', loadMsg:'数据加载中......',\n");
      out.write("\t\t\tfitColumns:true,//允许表格自动缩放,以适应父容器\n");
      out.write("\t        columns : [ [ \n");
      out.write("\t\t\t\t{field : 'ck', checkbox:true },\n");
      out.write("\t\t\t\t{field : 'id', width : 150, align:'center', title : '角色编号'},\n");
      out.write("\t\t\t\t{field : 'come_time', width : 150, align : 'center', title : '登陆时间'},\n");
      out.write("\t\t\t\t{field : 'ip', width : 150, align : 'center', title : 'IP地址'},\n");
      out.write("\t\t\t\t{field : 'username', width : 150, title : '登录用户', align:'center',\t}\n");
      out.write("\t        ] ],  \n");
      out.write("\t    });\n");
      out.write("\t}else{\n");
      out.write("\t\t$(\"#loginLogList\").datagrid({  \n");
      out.write("\t        title:'订单列表', singleSelect:false, collapsible:true, pagination:true, rownumbers:true, method:'get',\n");
      out.write("\t\t\tnowrap:true, toolbar:\"toolbar_loginLog\", url:'loginLog/search_loginLog_by_'+name+'?searchValue='+value,\n");
      out.write("\t\t\tloadMsg:'数据加载中......', fitColumns:true,//允许表格自动缩放,以适应父容器\n");
      out.write("\t        columns : [ [ \n");
      out.write("\t     \t\t\t{field : 'ck', checkbox:true },\n");
      out.write("\t    \t\t\t{field : 'id', width : 150, align:'center', title : '角色编号'},\n");
      out.write("\t    \t\t\t{field : 'come_time', width : 150, align : 'center', title : '登陆时间'},\n");
      out.write("\t    \t\t\t{field : 'ip', width : 150, align : 'center', title : 'IP地址'},\n");
      out.write("\t    \t\t\t{field : 'username', width : 150, title : '登录用户', align:'center'}\n");
      out.write("\t        ] ],  \n");
      out.write("\t    });\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\tvar loginLogNoteEditor ;\n");
      out.write("\t\n");
      out.write("\tvar loginLogProductEditor;\n");
      out.write("\t\n");
      out.write("\tvar loginLogCustomEditor;\n");
      out.write("\t\n");
      out.write("\t//格式化客户信息\n");
      out.write("\tfunction formatCustom(value, row, index){ \n");
      out.write("\t\tif(value !=null && value != ''){\n");
      out.write("\t\t\tvar row = onloginLogClickRow(index); \n");
      out.write("\t\t\treturn \"<a href=javascript:openloginLogCustom(\"+index+\")>\"+value.customName+\"</a>\";\n");
      out.write("\t\t}else{\n");
      out.write("\t\t\treturn \"无\";\n");
      out.write("\t\t}\n");
      out.write("\t};  \n");
      out.write("\t\n");
      out.write("\t//格式化产品信息\n");
      out.write("\tfunction  formatProduct(value, row, index){ \n");
      out.write("\t\tif(value !=null && value != ''){\n");
      out.write("\t\t\treturn \"<a href=javascript:openloginLogProduct(\"+index+\")>\"+value.productName+\"</a>\";\n");
      out.write("\t\t}else{\n");
      out.write("\t\t\treturn \"无\";\n");
      out.write("\t\t}\n");
      out.write("\t};\n");
      out.write("\t\n");
      out.write("\t//格式化订单要求\n");
      out.write("\tfunction formatloginLogNote(value, row, index){ \n");
      out.write("\t\tif(value !=null && value != ''){\n");
      out.write("\t\t\treturn \"<a href=javascript:openloginLogNote(\"+index+\")>\"+\"订单要求\"+\"</a>\";\n");
      out.write("\t\t}else{\n");
      out.write("\t\t\treturn \"无\";\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t//根据index拿到该行值\n");
      out.write("\tfunction onloginLogClickRow(index) {\n");
      out.write("\t\tvar rows = $('#loginLogList').datagrid('getRows');\n");
      out.write("\t\treturn rows[index];\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t//打开客户信息对话框\n");
      out.write("\tfunction  openloginLogCustom(index){ \n");
      out.write("\t\tvar row = onloginLogClickRow(index);\n");
      out.write("\t\t$(\"#loginLogCustomInfo\").dialog({\n");
      out.write("    \t\tonOpen :function(){\n");
      out.write("    \t\t\t$.get(\"custom/get/\"+row.custom.customId,'',function(data){\n");
      out.write("    \t\t\t\tloginLogCustomEditor = TAOTAO.createEditor(\"#loginLogCustomEditForm [name=note]\");\t\n");
      out.write("\t\t    \t\t//回显数据\n");
      out.write("\t\t    \t\t$(\"#loginLogCustomEditForm\").form(\"load\", data);\n");
      out.write("\t\t    \t\tloginLogCustomEditor.html(data.note);\n");
      out.write("\t\t    \t\t\n");
      out.write("\t\t    \t\tTAOTAO.init({\n");
      out.write("        \t\t\t\t\"pics\" : data.image,\n");
      out.write("        \t\t\t});\n");
      out.write("    \t    \t});\n");
      out.write("    \t\t},\n");
      out.write("\t\t\tonBeforeClose: function (event, ui) {\n");
      out.write("\t\t\t\t// 关闭Dialog前移除编辑器\n");
      out.write("\t\t\t   \tKindEditor.remove(\"#loginLogCustomEditForm [name=note]\");\n");
      out.write("\t\t\t}\n");
      out.write("    \t}).dialog(\"open\");\n");
      out.write("\t};\n");
      out.write("\t\n");
      out.write("\tfunction submitloginLogCustomEditForm(){\n");
      out.write("\t\t$.get(\"custom/edit_judge\",'',function(data){\n");
      out.write("    \t\tif(data.msg != null){\n");
      out.write("    \t\t\t$.messager.alert('提示', data.msg);\n");
      out.write("    \t\t}else{\n");
      out.write("    \t\t\tif(!$('#loginLogCustomEditForm').form('validate')){\n");
      out.write("    \t\t\t\t$.messager.alert('提示','表单还未填写完成!');\n");
      out.write("    \t\t\t\treturn ;\n");
      out.write("    \t\t\t}\n");
      out.write("    \t\t\t//同步文本框中的备注\n");
      out.write("    \t\t\tloginLogCustomEditor.sync();\n");
      out.write("    \t\t\t$.post(\"custom/update_all\",$(\"#loginLogCustomEditForm\").serialize(), function(data){\n");
      out.write("    \t\t\t\tif(data.status == 200){\n");
      out.write("    \t\t\t\t\t$.messager.alert('提示','修改客户成功!','info',function(){\n");
      out.write("    \t\t\t\t\t\t$(\"#loginLogCustomInfo\").dialog(\"close\");\n");
      out.write("    \t\t\t\t\t\t$(\"#loginLogList\").datagrid(\"reload\");\n");
      out.write("    \t\t\t\t\t});\n");
      out.write("    \t\t\t\t}else{\n");
      out.write("    \t\t\t\t\t$.messager.alert('提示',data.msg);\n");
      out.write("    \t\t\t\t}\n");
      out.write("    \t\t\t});\n");
      out.write("    \t\t}\n");
      out.write("    \t});\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t//打开产品信息对话框\n");
      out.write("\tfunction  openloginLogProduct(index){ \n");
      out.write("\t\tvar row = onloginLogClickRow(index);\n");
      out.write("\t\t$(\"#loginLogProductInfo\").dialog({\n");
      out.write("    \t\tonOpen :function(){\n");
      out.write("    \t\t\t$.get(\"product/get/\"+row.product.productId,'',function(data){\n");
      out.write("    \t\t\t\t\n");
      out.write("    \t\t\t\tloginLogProductEditor = TAOTAO.createEditor(\"#loginLogProductEditForm [name=note]\");\t\n");
      out.write("\t\t    \t\t//回显数据\n");
      out.write("\t\t    \t\t$(\"#loginLogProductEditForm\").form(\"load\", data);\n");
      out.write("\t\t    \t\tloginLogProductEditor.html(data.note);\n");
      out.write("\t\t    \t\t\n");
      out.write("\t\t    \t\t//加载图片\n");
      out.write(" \t        \t\tinitloginLogProductPic({\n");
      out.write("           \t\t\t\t\"pics\" : data.image,\n");
      out.write("           \t\t\t});\n");
      out.write("    \t    \t});\n");
      out.write("    \t\t},\n");
      out.write("\t\t\tonBeforeClose: function (event, ui) {\n");
      out.write("\t\t\t\t// 关闭Dialog前移除编辑器\n");
      out.write("\t\t\t   \tKindEditor.remove(\"#loginLogProductEditForm [name=note]\");\n");
      out.write("\t\t\t   \tclearManuSpan();\n");
      out.write("\t\t\t}\n");
      out.write("    \t}).dialog(\"open\");\n");
      out.write("\t};\n");
      out.write("\t\n");
      out.write("\t// 加载图片\n");
      out.write("    function initloginLogProductPic(data){\n");
      out.write("    \t$(\".loginLogProductPic\").each(function(i,e){\n");
      out.write("    \t\tvar _ele = $(e);\n");
      out.write("    \t\t_ele.siblings(\"div.pics\").remove();\n");
      out.write("    \t\t_ele.after('\\\n");
      out.write("    \t\t\t<div class=\"pics\">\\\n");
      out.write("        \t\t\t<ul></ul>\\\n");
      out.write("        \t\t</div>');\n");
      out.write("    \t\t// 回显图片\n");
      out.write("    \t\tvar j = false;\n");
      out.write("        \tif(data && data.pics){\n");
      out.write("        \t\tvar imgs = data.pics.split(\",\");\n");
      out.write("        \t\tfor(var i in imgs){\n");
      out.write("        \t\t\tif($.trim(imgs[i]).length > 0){\n");
      out.write("        \t\t\t\t_ele.siblings(\".pics\").find(\"ul\").append(\"<li><a id='img\"+i+\"' href='\"+imgs[i]+\"' target='_blank'>\" +\n");
      out.write("        \t\t\t\t\t\t\"<img src='\"+imgs[i]+\"' width='80' height='50' /></a> \");\n");
      out.write("        \t\t\t\tj = true;\n");
      out.write("        \t\t\t}\n");
      out.write("        \t\t}\n");
      out.write("        \t}\n");
      out.write("        \tif(!j){\n");
      out.write("    \t\t\t$(\"#loginLogProductPic\").html(\"<span style='font-size: 12px;font-family: Microsoft YaHei;'>无</span>\");\n");
      out.write("    \t\t}\n");
      out.write("    \t});\n");
      out.write("    }\n");
      out.write("\t\n");
      out.write("    function clearManuSpan(){\n");
      out.write("\t\t$(\"#loginLogProductPic\").html('');\n");
      out.write("\t}\n");
      out.write("    \n");
      out.write("\tfunction submitloginLogProductEditForm(){\n");
      out.write("\t\t$.get(\"product/edit_judge\",'',function(data){\n");
      out.write("    \t\tif(data.msg != null){\n");
      out.write("    \t\t\t$.messager.alert('提示', data.msg);\n");
      out.write("    \t\t}else{\n");
      out.write("    \t\t\tif(!$('#loginLogProductEditForm').form('validate')){\n");
      out.write("    \t\t\t\t$.messager.alert('提示','表单还未填写完成!');\n");
      out.write("    \t\t\t\treturn ;\n");
      out.write("    \t\t\t}\n");
      out.write("    \t\t\tloginLogProductEditor.sync();\n");
      out.write("    \t\t\t\n");
      out.write("    \t\t\t$.post(\"product/update_all\",$(\"#loginLogProductEditForm\").serialize(), function(data){\n");
      out.write("    \t\t\t\tif(data.status == 200){\n");
      out.write("    \t\t\t\t\t$.messager.alert('提示','修改产品成功!','info',function(){\n");
      out.write("    \t\t\t\t\t\t$(\"#loginLogProductInfo\").dialog(\"close\");\n");
      out.write("    \t\t\t\t\t\t$(\"#loginLogList\").datagrid(\"reload\");\n");
      out.write("    \t\t\t\t\t});\n");
      out.write("    \t\t\t\t}else{\n");
      out.write("    \t\t\t\t\t$.messager.alert('提示',data.msg);\n");
      out.write("    \t\t\t\t}\n");
      out.write("    \t\t\t});\n");
      out.write("    \t\t}\n");
      out.write("    \t});\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t//打开订单要求富文本编辑器对话框\n");
      out.write("\tfunction  openloginLogNote(index){ \n");
      out.write("\t\tvar row = onloginLogClickRow(index);\n");
      out.write("\t\t$(\"#loginLogNoteDialog\").dialog({\n");
      out.write("    \t\tonOpen :function(){\n");
      out.write("    \t\t\t$(\"#loginLogNoteForm [name=loginLogId]\").val(row.loginLogId);\n");
      out.write("    \t\t\tloginLogNoteEditor = TAOTAO.createEditor(\"#loginLogNoteForm [name=note]\");\n");
      out.write("    \t\t\tloginLogNoteEditor.html(row.note);\n");
      out.write("    \t\t},\n");
      out.write("\t\t\n");
      out.write("\t\t\tonBeforeClose: function (event, ui) {\n");
      out.write("\t\t\t\t// 关闭Dialog前移除编辑器\n");
      out.write("\t\t\t   \tKindEditor.remove(\"#loginLogNoteForm [name=note]\");\n");
      out.write("\t\t\t}\n");
      out.write("    \t}).dialog(\"open\");\n");
      out.write("\t\t\n");
      out.write("\t};\n");
      out.write("\t\n");
      out.write("\t//更新订单要求\n");
      out.write("\tfunction updateloginLogNote(){\n");
      out.write("\t\t$.get(\"loginLog/edit_judge\",'',function(data){\n");
      out.write("    \t\tif(data.msg != null){\n");
      out.write("    \t\t\t$.messager.alert('提示', data.msg);\n");
      out.write("    \t\t}else{\n");
      out.write("    \t\t\tloginLogNoteEditor.sync();\n");
      out.write("    \t\t\t$.post(\"loginLog/update_note\",$(\"#loginLogNoteForm\").serialize(), function(data){\n");
      out.write("    \t\t\t\tif(data.status == 200){\n");
      out.write("    \t\t\t\t\t$(\"#loginLogNoteDialog\").dialog(\"close\");\n");
      out.write("    \t\t\t\t\t$(\"#loginLogList\").datagrid(\"reload\");\n");
      out.write("    \t\t\t\t\t$.messager.alert(\"操作提示\", \"更新订单要求成功！\");\n");
      out.write("    \t\t\t\t}else{\n");
      out.write("    \t\t\t\t\t$.messager.alert(\"操作提示\", \"更新订单要求失败！\");\n");
      out.write("    \t\t\t\t}\n");
      out.write("    \t\t\t});\n");
      out.write("    \t\t}\n");
      out.write("    \t});\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("    function getloginLogSelectionsIds(){\n");
      out.write("    \tvar loginLogList = $(\"#loginLogList\");\n");
      out.write("    \tvar sels = loginLogList.datagrid(\"getSelections\");\n");
      out.write("    \tvar ids = [];\n");
      out.write("    \tfor(var i in sels){\n");
      out.write("    \t\tids.push(sels[i].id);\n");
      out.write("    \t}\n");
      out.write("    \tids = ids.join(\",\"); \n");
      out.write("    \t\n");
      out.write("    \treturn ids;\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    function loginLog_add(){\n");
      out.write("    \t$.get(\"loginLog/add_judge\",'',function(data){\n");
      out.write("       \t\tif(data.msg != null){\n");
      out.write("       \t\t\t$.messager.alert('提示', data.msg);\n");
      out.write("       \t\t}else{\n");
      out.write("       \t\t\t$(\"#loginLogAddWindow\").window(\"open\");\n");
      out.write("       \t\t}\n");
      out.write("       \t});\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    function loginLog_edit(){\n");
      out.write("    \t$.get(\"loginLog/edit_judge\",'',function(data){\n");
      out.write("       \t\tif(data.msg != null){\n");
      out.write("       \t\t\t$.messager.alert('提示', data.msg);\n");
      out.write("       \t\t}else{\n");
      out.write("       \t\t\tvar ids = getloginLogSelectionsIds();\n");
      out.write("               \t\n");
      out.write("               \tif(ids.length == 0){\n");
      out.write("               \t\t$.messager.alert('提示','必须选择一个订单才能编辑!');\n");
      out.write("               \t\treturn ;\n");
      out.write("               \t}\n");
      out.write("               \tif(ids.indexOf(',') > 0){\n");
      out.write("               \t\t$.messager.alert('提示','只能选择一个订单!');\n");
      out.write("               \t\treturn ;\n");
      out.write("               \t}\n");
      out.write("               \t\n");
      out.write("               \t$(\"#loginLogEditWindow\").window({\n");
      out.write("               \t\tonLoad :function(){\n");
      out.write("               \t\t\t//回显数据\n");
      out.write("               \t\t\tvar data = $(\"#loginLogList\").datagrid(\"getSelections\")[0];\n");
      out.write("               \t\t\tdata.customId = data.custom.customId; \n");
      out.write("               \t\t\tdata.productId = data.product.productId; \n");
      out.write("               \t\t\tdata.loginLogDate = TAOTAO.formatDateTime(data.loginLogDate);\n");
      out.write("               \t\t\tdata.requestDate = TAOTAO.formatDateTime(data.requestDate);\n");
      out.write("               \t\t\t$(\"#loginLogEditForm\").form(\"load\", data);\n");
      out.write("               \t\t\tloginLogEditEditor.html(data.note);\n");
      out.write("               \t\t\t\n");
      out.write("               \t\t\tTAOTAO.init({\n");
      out.write("               \t\t\t\t\"pics\" : data.image,\n");
      out.write("               \t\t\t});\n");
      out.write("               \t\t\t\n");
      out.write("               \t\t\t//加载文件上传插件\n");
      out.write("               \t\t\tinitloginLogEditFileUpload();\n");
      out.write("               \t\t\t//加载上传过的文件\n");
      out.write("               \t\t\tinitUploadedFile();\n");
      out.write("               \t\t}\n");
      out.write("               \t}).window(\"open\");\n");
      out.write("       \t\t}\n");
      out.write("       \t});\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    function loginLog_delete(){\n");
      out.write("    \t$.get(\"loginLog/delete_judge\",'',function(data){\n");
      out.write("      \t\tif(data.msg != null){\n");
      out.write("      \t\t\t$.messager.alert('提示', data.msg);\n");
      out.write("      \t\t}else{\n");
      out.write("      \t\t\tvar ids = getloginLogSelectionsIds();\n");
      out.write("              \tif(ids.length == 0){\n");
      out.write("              \t\t$.messager.alert('提示','未选中订单!');\n");
      out.write("              \t\treturn ;\n");
      out.write("              \t}\n");
      out.write("              \t$.messager.confirm('确认','确定删除ID为 '+ids+' 的日志吗？',function(r){\n");
      out.write("              \t    if (r){\n");
      out.write("              \t    \tvar params = {\"ids\":ids};\n");
      out.write("                      \t$.post(\"loginLog/delete_batch\",params, function(data){\n");
      out.write("                  \t\t\tif(data.status == 200){\n");
      out.write("                  \t\t\t\t$.messager.alert('提示','删除日志成功!',undefined,function(){\n");
      out.write("                  \t\t\t\t\t$(\"#loginLogList\").datagrid(\"reload\");\n");
      out.write("                  \t\t\t\t});\n");
      out.write("                  \t\t\t}\n");
      out.write("                  \t\t});\n");
      out.write("              \t    }\n");
      out.write("              \t});\n");
      out.write("      \t\t}\n");
      out.write("      \t});\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    function loginLog_reload(){\n");
      out.write("    \t$(\"#loginLogList\").datagrid(\"reload\");\n");
      out.write("    }\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /WEB-INF/jsp/loginLog_list.jsp(22,1) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/loginLog_list.jsp(22,1) '${sessionScope.sysPermissionList}'",_el_expressionfactory.createValueExpression(_jspx_page_context.getELContext(),"${sessionScope.sysPermissionList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    // /WEB-INF/jsp/loginLog_list.jsp(22,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("per");
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write('\n');
          out.write('	');
          out.write('	');
          if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write('\n');
          out.write('	');
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
    // /WEB-INF/jsp/loginLog_list.jsp(23,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${per=='loginLog:delete' }", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\n");
        out.write("\t\t    <div style=\"float: left;\">  \n");
        out.write("\t\t        <a href=\"#\" class=\"easyui-linkbutton\" plain=\"true\" icon=\"icon-cancel\" onclick=\"loginLog_delete()\">删除</a>  \n");
        out.write("\t\t    </div>  \n");
        out.write("\t\t");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }
}
